{"version":3,"sources":["utils/utils.js","components/Header.js","assets/puff.svg","components/Loader.js","components/Info.js","components/NewTransfer.js","components/TransferList.js","App.js","index.js"],"names":["getWeb3","a","Promise","resolve","reject","detectEthereumProvider","provider","request","method","web3","Web3","window","ethereum","error","getWallet","eth","net","getId","networkId","contractDeployment","Wallet","networks","Contract","abi","address","Header","Loader","src","puff","alt","Info","approvers","quorum","map","approver","i","NewTransfer","createTransfer","useState","undefined","transfer","setTransfer","updateTransfer","e","field","value","target","onSubmit","preventDefault","submit","htmlFor","id","type","onChange","TransferList","transfers","approveTransfer","amount","to","approvals","onClick","sent","App","setWeb3","accounts","setAccounts","wallet","setWallet","setApprovers","setQuorum","isLoading","setIsLoading","setTransfers","useEffect","init","getAccounts","methods","getApprovers","call","getTransfers","fetchTransfers","send","from","transferId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c011221b.chunk.js","sourcesContent":["import Web3 from 'web3';\r\nimport Wallet from '../contracts/Wallet.json';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\nconst getWeb3 = async () => {\r\n  return new Promise(async (resolve, reject) => {\r\n    let provider = await detectEthereumProvider();\r\n\r\n    if (provider) {\r\n      await provider.request({ method: 'eth_requestAccounts' });\r\n\r\n      try {\r\n        const web3 = new Web3(window.ethereum);\r\n\r\n        resolve(web3);\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    }\r\n    reject('Install Metamask');\r\n  });\r\n};\r\n\r\nconst getWallet = async (web3) => {\r\n  const networkId = await web3.eth.net.getId();\r\n  const contractDeployment = Wallet.networks[networkId];\r\n\r\n  return new web3.eth.Contract(\r\n    Wallet.abi,\r\n    contractDeployment && contractDeployment.address\r\n  );\r\n};\r\n\r\nexport { getWeb3, getWallet };\r\n","import React from 'react';\r\n\r\nfunction Header() {\r\n  return <h1>Multisig Wallet</h1>;\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/puff.6b477021.svg\";","import React from 'react';\r\nimport puff from '../assets/puff.svg';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div>\r\n      <img src={puff} alt='loading...' />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\n\r\nfunction Info({ approvers, quorum }) {\r\n  return (\r\n    <div>\r\n      <h3>Approvers:</h3>\r\n      <ul>\r\n        {approvers.map((approver, i) => (\r\n          <li key={i}>{approver}</li>\r\n        ))}\r\n      </ul>\r\n      <h3>Quorum: {quorum}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import React, { useState } from 'react';\r\n\r\nfunction NewTransfer({ createTransfer }) {\r\n  const [transfer, setTransfer] = useState(undefined);\r\n\r\n  const updateTransfer = (e, field) => {\r\n    const { value } = e.target;\r\n    setTransfer({ ...transfer, [field]: value });\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    createTransfer(transfer);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>New Transaction</h3>\r\n      <form onSubmit={(e) => submit(e)}>\r\n        <label htmlFor='amount'>Amount</label>\r\n        <input\r\n          id='amount'\r\n          type='text'\r\n          onChange={(e) => updateTransfer(e, 'amount')}\r\n        />\r\n        <label htmlFor='to'>To</label>\r\n        <input id='to' type='text' onChange={(e) => updateTransfer(e, 'to')} />\r\n        <button>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTransfer;\r\n","import React from 'react';\r\n\r\nfunction TransferList({ transfers, approveTransfer }) {\r\n  return (\r\n    <div>\r\n      <h3>Transfers</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Amount</th>\r\n            <th>To</th>\r\n            <th>Approvals</th>\r\n            <th>Sent</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transfers.map((transfer) => (\r\n            <tr key={transfer.id}>\r\n              <td>{transfer.id}</td>\r\n              <td>{transfer.amount}</td>\r\n              <td>{transfer.to}</td>\r\n              <td>\r\n                {transfer.approvals}\r\n                <button onClick={() => approveTransfer(transfer.id)}>\r\n                  Approve\r\n                </button>\r\n              </td>\r\n              <td>{transfer.sent ? 'yes' : 'no'}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransferList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './styles/App.scss';\r\nimport { getWallet, getWeb3 } from './utils/utils.js';\r\nimport Header from './components/Header';\r\nimport Loader from './components/Loader';\r\nimport Info from './components/Info';\r\nimport NewTransfer from './components/NewTransfer';\r\nimport TransferList from './components/TransferList';\r\n\r\nfunction App() {\r\n  const [web3, setWeb3] = useState(undefined);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [wallet, setWallet] = useState(undefined);\r\n  const [approvers, setApprovers] = useState([]);\r\n  const [quorum, setQuorum] = useState(undefined);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [transfers, setTransfers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      setIsLoading(false);\r\n      const web3 = await getWeb3();\r\n      const accounts = await web3.eth.getAccounts();\r\n      const wallet = await getWallet(web3);\r\n      const approvers = await wallet.methods.getApprovers().call();\r\n      const quorum = await wallet.methods.quorum().call();\r\n      const transfers = await wallet.methods.getTransfers().call();\r\n\r\n      setWeb3(web3);\r\n      setAccounts(accounts);\r\n      setWallet(wallet);\r\n      setApprovers(approvers);\r\n      setQuorum(quorum);\r\n      setTransfers(transfers);\r\n      setIsLoading(true);\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  const fetchTransfers = async () => {\r\n    const transfers = await wallet.methods.getTransfers().call();\r\n    setTransfers(transfers);\r\n  };\r\n\r\n  const createTransfer = async (transfer) => {\r\n    await wallet.methods\r\n      .createTransfer(transfer.amount, transfer.to)\r\n      .send({ from: accounts[0] });\r\n    await fetchTransfers();\r\n  };\r\n\r\n  const approveTransfer = async (transferId) => {\r\n    await wallet.methods\r\n      .approveTransfer(transferId)\r\n      .send({ from: accounts[0] });\r\n    await fetchTransfers();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {isLoading ? (\r\n        <div>\r\n          <Info approvers={approvers} quorum={quorum} />\r\n          <NewTransfer createTransfer={createTransfer} />\r\n          <TransferList\r\n            transfers={transfers}\r\n            approveTransfer={approveTransfer}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}